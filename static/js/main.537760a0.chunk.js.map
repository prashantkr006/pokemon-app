{"version":3,"sources":["components/Title.js","components/Search.js","components/Deck.js","components/PokemonInfo.js","components/Results.js","index.js","utils/storage.js"],"names":["Title","props","react_default","a","createElement","Fragment","title","subtitle","Search","onChange","event","filterName","value","target","toLowerCase","filteredPokemons","pokemons","filter","pokemon","lowerCasePokemonName","name","lowerCaseFilterName","includes","map","sort","firstName","secondName","lowerCaseFirstName","lowerCaseSecondName","startsWith","localeCompare","onPokemonsChange","placeholder","Deck","_ref","deckItems","deckItem","index","key","className","PokemonInfo","_React$useState","React","useState","_React$useState2","Object","slicedToArray","imageSrc","setImageSrc","_React$useState3","_React$useState4","desc","setDesc","_React$useState5","_React$useState6","weight","setWeight","_fetchPokemon","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","species","flavorTextEntry","wrap","_context","prev","next","fetch","concat","sent","json","sprites","front_default","setTimeout","back_default","url","flavor_text_entries","find","element","language","flavor_text","stop","apply","this","arguments","useEffect","fetchPokemon","src","alt","propType","PropTypes","string","isRequired","Results","showPokemon","setShowPokemon","components_PokemonInfo","onClick","onAddToDeckClick","handleClick","length","App","setPokemons","localStorage","getItem","JSON","parse","error","getDeckFromStorage","deck","setDeck","setItem","stringify","setDeckToStorage","components_Title","components_Deck","components_Search","newPokemons","components_Results","pokeName","sliceDeck","toConsumableArray","slice","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.537760a0.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction Title(props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{props.title}</h1>\r\n\t\t\t<h2>{props.subtitle}</h2>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nTitle.propTypes = {\r\n\ttitle: propTypes.string\r\n};\r\n//propTypes is a support for developers to see if you forgot to set an element\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport pokemons from \"json-pokemon\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction filterPokemonsByName(filterName) {\r\n  return pokemon => {\r\n    const lowerCasePokemonName = pokemon.name.toLowerCase();\r\n    const lowerCaseFilterName = filterName.toLowerCase();\r\n    return lowerCasePokemonName.includes(lowerCaseFilterName);\r\n  };\r\n}\r\n//this function is used below under .filter\r\n// startsWith could also be replaced with .includes() to have all pokemons where ex. pi is includes. Otherwise it is only the pokemons that starts with pi.\r\n\r\nfunction Search(props) {\r\n  function handleChange(event) {\r\n    const value = event.target.value.toLowerCase();\r\n\r\n    if (value !== \"\") {\r\n      const filteredPokemons = pokemons\r\n        .filter(filterPokemonsByName(value))\r\n        // see how this could also have been written in one line at the end of sheet\r\n        .map(pokemon => pokemon.name)\r\n        // use map to return all elements and then only the pokemon names\r\n        .sort((firstName, secondName) => {\r\n          const lowerCaseFirstName = firstName.toLowerCase();\r\n          const lowerCaseSecondName = secondName.toLowerCase();\r\n          if (\r\n            lowerCaseFirstName.startsWith(value) &&\r\n            lowerCaseSecondName.startsWith(value)\r\n          ) {\r\n            return lowerCaseFirstName.localeCompare(lowerCaseSecondName);\r\n          }\r\n          // only first starts with value\r\n          if (lowerCaseFirstName.startsWith(value)) {\r\n            return -1;\r\n          }\r\n          // only second starts with value\r\n          if (lowerCaseSecondName.startsWith(value)) {\r\n            return 1;\r\n          }\r\n          // both don't start with value -> sort by name\r\n          return lowerCaseFirstName.localeCompare(lowerCaseSecondName);\r\n        });\r\n\r\n      props.onPokemonsChange(filteredPokemons);\r\n    } else {\r\n      props.onPokemonsChange([]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Find your Pokemon!</h2>\r\n      <label>\r\n        Search:\r\n        <input onChange={handleChange} placeholder=\"Type in Pokemon\" />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nSearch.propTypes = {\r\n  onPokemonsChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Search;\r\n\r\n/*   const filteredPokemons = pokemons\r\n//.filter(pokemon =>\r\n  pokemon.name.toLowerCase().startsWith(value.toLowerCase())\r\n)\r\n.map(pokemon => pokemon.name);\r\nprops.onPokemonsChange(filteredPokemons);\r\n} */\r\n","import React from 'react';\r\n\r\n/*function Deck() {\r\n  const pokeDeck = [\"pikachu\", \"XX\", \"Bulbasaur\", \"Maria\", \"Annika\"];\r\n  const pokeDeckElements = pokeDeck.map(function(element) {\r\n    return <button className=\"deckbtn\">{element}</button>;\r\n  });\r\n  return pokeDeckElements;\r\n}*/\r\n\r\nfunction Deck({ deckItems }) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{deckItems.map((deckItem, index) => (\r\n\t\t\t\t<span key={deckItem + index} className=\"DeckItem\">\r\n\t\t\t\t\t{deckItem}\r\n\t\t\t\t</span>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Deck;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PokemonInfo(props) {\r\n\tconst [imageSrc, setImageSrc] = React.useState(''); //this is a state\r\n\tconst [desc, setDesc] = React.useState('loading...'); //you can write in a comment to the user in the useState\r\n\tconst [weight, setWeight] = React.useState('');\r\n\t//desc is description, src is source\r\n\r\n\tasync function fetchPokemon() {\r\n\t\tlet response = await fetch(`https://pokeapi.co/api/v2/pokemon/${props.pokemon.toLowerCase()}`);\r\n\t\tconst pokemon = await response.json();\r\n\t\tsetImageSrc(pokemon.sprites.front_default);\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetImageSrc(pokemon.sprites.back_default);\r\n\t\t}, 3000);\r\n\t\t//could also use setInterval to keep it rotating between front and back */\r\n\r\n\t\tresponse = await fetch(pokemon.species.url);\r\n\r\n\t\tconst species = await response.json();\r\n\t\tconst flavorTextEntry = species.flavor_text_entries.find((element) => element.language.name === 'en');\r\n\t\tsetDesc(flavorTextEntry.flavor_text);\r\n\r\n\t\tsetWeight(pokemon.weight);\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\tfetchPokemon();\r\n\t}, [props.pokemon]);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"resultName\">{props.pokemon}</div>\r\n\t\t\t<img src={imageSrc} alt={props.pokemon} />\r\n\t\t\t<div className=\"resultDescription\">{desc}</div>\r\n\t\t\t<div>weight: {weight}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nPokemonInfo.propType = {\r\n\tpokemon: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PokemonInfo;\r\n","import React from \"react\";\r\nimport PokemonInfo from \"./PokemonInfo\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//temporary\r\n//const pokemons = [\"Pikachu\", \"Marshadow\", \"Drampa\"];\r\n\r\nfunction Results(props) {\r\n  const [showPokemon, setShowPokemon] = React.useState(null);\r\n\r\n  if (showPokemon) {\r\n    return (\r\n      <div>\r\n        <PokemonInfo pokemon={showPokemon} />\r\n        <button onClick={handleAddClick}>add to deck</button>\r\n        <br /> <button onClick={handleBackClick}>Back</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function handleAddClick() {\r\n    props.onAddToDeckClick(showPokemon);\r\n  }\r\n  //onAddToDeckClick is the connection to the index.js\r\n\r\n  function handleBackClick() {\r\n    return setShowPokemon(null);\r\n  }\r\n\r\n  function handleClick(pokemon) {\r\n    return function() {\r\n      setShowPokemon(pokemon);\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.pokemons.map(pokemon => (\r\n        <button onClick={handleClick(pokemon)} key={pokemon}>\r\n          {pokemon}\r\n        </button>\r\n      ))}\r\n      <div className=\"resultButton\">\r\n        {props.pokemons.length === 0 && <div> Sorry, no Pokemons found </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nResults.propTypes = {\r\n  pokemons: PropTypes.array.isRequired\r\n};\r\n//Proptypes is a help for developers, to make sure the property is there. Results is the function,\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Title from './components/Title';\r\nimport Search from './components/Search';\r\nimport Deck from './components/Deck';\r\nimport { getDeckFromStorage, setDeckToStorage } from './utils/storage';\r\n\r\nimport './styles.css';\r\nimport Results from './components/Results';\r\n\r\nfunction App() {\r\n\tconst [pokemons, setPokemons] = React.useState([]);\r\n\tconst [deck, setDeck] = React.useState(getDeckFromStorage());\r\n\t//getDeckFromStorage is coming from the utils/storage folder\r\n\r\n\t//build in of localstorage on deck buttons when browser is loaded.\r\n\tReact.useEffect(() => {\r\n\t\tsetDeckToStorage(deck);\r\n\t}, [deck]);\r\n\r\n\tfunction handlePokemonsChange(newPokemons) {\r\n\t\tsetPokemons(newPokemons);\r\n\t\t//console.log(\"handlePokemonsChange\", newPokemons);\r\n\t}\r\n\r\n\tfunction handleAddToDeckClick(pokeName) {\r\n\t\tconst newDeck = [pokeName, ...deck];\r\n\t\t//the 3 dots are the \"rest parameter\" eg. it takes the rest of the elements\r\n\t\tconst sliceDeck = newDeck.slice(0, 5);\r\n\t\t// to only show 5 elements, we use slice. Could also have used .length = 5\r\n\t\tsetDeck(sliceDeck);\r\n\t}\r\n\t//this function is called below in results\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Title title=\"pokemon app\" />\r\n\t\t\t<Deck deckItems={deck} />\r\n\t\t\t<Search onPokemonsChange={handlePokemonsChange} />\r\n\t\t\t<Results pokemons={pokemons} onAddToDeckClick={handleAddToDeckClick} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(<App />, rootElement);\r\n","export function getDeckFromStorage() {\r\n  try {\r\n    const deckItem = localStorage.getItem(\"pokedex-deck\");\r\n    const parsed = JSON.parse(deckItem);\r\n    return parsed || [];\r\n  } catch (error) {\r\n    return [];\r\n  }\r\n}\r\n\r\nexport function setDeckToStorage(deck) {\r\n  localStorage.setItem(\"pokedex-deck\", JSON.stringify(deck));\r\n}\r\n"],"sourceRoot":""}